// Desafio Super Trunfo - Países — Nível Mestre
// Autor: Beatriz Cardoso Cunha
// Objetivo: Cadastrar DUAS cartas, calcular atributos derivados e comparar (1 = Carta 1 vence, 0 = Carta 2 vence/empate)
// Observações:
//  - Usa fgets para campos textuais (aceita nomes compostos)
//  - Usa scanf apenas para números
//  - Densidade menor vence; demais (inclui Super Poder) maior vence

#include <stdio.h>
#include <string.h>

typedef unsigned long ulong; // População como unsigned long int

struct Carta {
    char estado[16];
    char codigo[16];
    char cidade[64];
    ulong populacao;   // unsigned long int
    float area;        // km²
    float pib;         // bilhões
    int pontos;        // pontos turísticos
    // Derivados
    float densidade;      // hab/km²
    float pib_per_capita; // PIB / população
    float super_poder;    // soma com 1/densidade
};

static void lerString(char *dest, int tam) {
    if (fgets(dest, tam, stdin)) {
        dest[strcspn(dest, "\n")] = '\0';
    } else {
        dest[0] = '\0';
    }
}

int main(void) {
    struct Carta c1, c2;

    // ---------- Cadastro Carta 1 ----------
    printf("Cadastro da Carta 1\n");
    printf("Estado (ex: SP): ");
    lerString(c1.estado, sizeof(c1.estado));

    printf("Código (ex: A01): ");
    lerString(c1.codigo, sizeof(c1.codigo));

    printf("Cidade: ");
    lerString(c1.cidade, sizeof(c1.cidade));

    printf("População: ");
    scanf("%lu", &c1.populacao);

    printf("Área (km2): ");
    scanf("%f", &c1.area);

    printf("PIB (em bilhões): ");
    scanf("%f", &c1.pib);

    printf("Número de pontos turísticos: ");
    scanf("%d", &c1.pontos);

    getchar(); // consome ENTER pendente antes de voltar a usar fgets

    // ---------- Cadastro Carta 2 ----------
    printf("\nCadastro da Carta 2\n");
    printf("Estado (ex: RJ): ");
    lerString(c2.estado, sizeof(c2.estado));

    printf("Código (ex: B02): ");
    lerString(c2.codigo, sizeof(c2.codigo));

    printf("Cidade: ");
    lerString(c2.cidade, sizeof(c2.cidade));

    printf("População: ");
    scanf("%lu", &c2.populacao);

    printf("Área (km2): ");
    scanf("%f", &c2.area);

    printf("PIB (em bilhões): ");
    scanf("%f", &c2.pib);

    printf("Número de pontos turísticos: ");
    scanf("%d", &c2.pontos);

    // ---------- Cálculos derivados ----------
    c1.densidade      = (c1.area       > 0.0f) ? ((float)c1.populacao / c1.area) : 0.0f;
    c2.densidade      = (c2.area       > 0.0f) ? ((float)c2.populacao / c2.area) : 0.0f;

    c1.pib_per_capita = (c1.populacao  > 0UL)  ? ( c1.pib / (float)c1.populacao) : 0.0f;
    c2.pib_per_capita = (c2.populacao  > 0UL)  ? ( c2.pib / (float)c2.populacao) : 0.0f;

    float inv_dens_1 = (c1.densidade > 0.0f) ? (1.0f / c1.densidade) : 0.0f;
    float inv_dens_2 = (c2.densidade > 0.0f) ? (1.0f / c2.densidade) : 0.0f;

    c1.super_poder = (float)c1.populacao + c1.area + c1.pib + (float)c1.pontos + c1.pib_per_capita + inv_dens_1;
    c2.super_poder = (float)c2.populacao + c2.area + c2.pib + (float)c2.pontos + c2.pib_per_capita + inv_dens_2;

    // ---------- Exibição (dados + comparações) ----------
    printf("\n===== CARTA 1 =====\n");
    printf("Estado: %s\nCódigo: %s\nCidade: %s\n", c1.estado, c1.codigo, c1.cidade);
    printf("População: %lu\nÁrea (km2): %.2f\nPIB (bi): %.2f\nPontos turísticos: %d\n", c1.populacao, c1.area, c1.pib, c1.pontos);
    printf("Densidade (hab/km2): %.2f\nPIB per Capita: %.6f\nSuper Poder: %.6f\n", c1.densidade, c1.pib_per_capita, c1.super_poder);

    printf("\n===== CARTA 2 =====\n");
    printf("Estado: %s\nCódigo: %s\nCidade: %s\n", c2.estado, c2.codigo, c2.cidade);
    printf("População: %lu\nÁrea (km2): %.2f\nPIB (bi): %.2f\nPontos turísticos: %d\n", c2.populacao, c2.area, c2.pib, c2.pontos);
    printf("Densidade (hab/km2): %.2f\nPIB per Capita: %.6f\nSuper Poder: %.6f\n", c2.densidade, c2.pib_per_capita, c2.super_poder);

    printf("\n=== COMPARAÇÃO (1 = Carta 1 vence, 0 = Carta 2 vence/empate) ===\n");
    printf("População: %d\n", (c1.populacao > c2.populacao));
    printf("Área: %d\n",       (c1.area      > c2.area));
    printf("PIB: %d\n",        (c1.pib       > c2.pib));
    printf("Pontos Turísticos: %d\n", (c1.pontos   > c2.pontos));
    printf("Densidade (menor vence): %d\n", (c1.densidade < c2.densidade));
    printf("PIB per Capita: %d\n", (c1.pib_per_capita > c2.pib_per_capita));
    printf("Super Poder: %d\n",     (c1.super_poder > c2.super_poder));

    return 0;
}

